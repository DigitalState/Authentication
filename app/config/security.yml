security:
  encoders:
    FOS\UserBundle\Model\UserInterface: bcrypt

  providers:
    anonymous:
      id: app.security.provider.anonymous
    individual:
      id: app.security.provider.individual
    organization:
      id: app.security.provider.organization
    staff:
      id: app.security.provider.staff
    system:
      id: app.security.provider.system

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    system:
      pattern: ^/system/
      stateless: true
      provider: ds_system
      http_basic: ~
    auth_individual:
      pattern: ^/auth/individual
      stateless: true
      anonymous: true
      provider: individual
      form_login:
        check_path: app_auth_individual_check
        username_parameter: username
        password_parameter: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
        require_previous_session: false
    auth_organization:
      pattern: ^/auth/organization
      stateless: true
      anonymous: true
      provider: organization
      form_login:
        check_path: app_auth_organization_check
        username_parameter: username
        password_parameter: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
        require_previous_session: false
    auth_staff:
      pattern: ^/auth/staff
      stateless: true
      anonymous: true
      provider: staff
      form_login:
        check_path: app_auth_staff_check
        username_parameter: username
        password_parameter: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
        require_previous_session: false
    auth_system:
      pattern: ^/auth/system
      stateless: true
      anonymous: true
      provider: system
      form_login:
        check_path: app_auth_system_check
        username_parameter: username
        password_parameter: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
        require_previous_session: false
    oauth_individual:
      pattern: ^/oauth/individual
      stateless: true
      anonymous: true
      oauth:
        resource_owners:
          individual/github: app_oauth_individual_github_check
          individual/google: app_oauth_individual_google_check
          individual/twitter: app_oauth_individual_twitter_check
        login_path: /oauth/individual
        check_path: /oauth/individual
        oauth_user_provider:
          service: app.security.provider.oauth.individual
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    oauth_organization:
      pattern: ^/oauth/organization
      stateless: true
      anonymous: true
      oauth:
        resource_owners:
          organization/github: app_oauth_organization_github_check
          organization/google: app_oauth_organization_google_check
          organization/twitter: app_oauth_organization_twitter_check
        login_path: /oauth/organization
        check_path: /oauth/organization
        oauth_user_provider:
          service: app.security.provider.oauth.organization
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    oauth_staff:
      pattern: ^/oauth/staff
      stateless: true
      anonymous: true
      oauth:
        resource_owners:
          staff/github: app_oauth_staff_github_check
          staff/google: app_oauth_staff_google_check
          staff/twitter: app_oauth_staff_twitter_check
        login_path: /oauth/staff
        check_path: /oauth/staff
        oauth_user_provider:
          service: app.security.provider.oauth.staff
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    api:
      pattern: ^/
      stateless: true
      anonymous: true
      provider: ds_security
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator

  access_control:
    - { path: ^/system/,              role: ROLE_SYSTEM }
    - { path: ^/meta,                 role: IS_AUTHENTICATED_FULLY }
    - { path: ^/auth,                 role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/oauth,                role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/registration,         role: IS_AUTHENTICATED_FULLY }
    - { path: ^/password/requests,    role: IS_AUTHENTICATED_FULLY }
    - { path: ^/password/reset,       role: IS_AUTHENTICATED_FULLY }
    - { path: ^/accesses,             role: IS_AUTHENTICATED_FULLY }
    - { path: ^/permissions,          role: IS_AUTHENTICATED_FULLY }
    - { path: ^/configs,              role: IS_AUTHENTICATED_FULLY }
    - { path: ^/users,                role: IS_AUTHENTICATED_FULLY }
    # Routes required to exist by FOSUserBundle, but not used by the application.
    - { path: ^/check-email,          role: ROLE_NO_ACCESS }
    - { path: ^/reset,                role: ROLE_NO_ACCESS }
    - { path: ^/profile/show,         role: ROLE_NO_ACCESS }
    - { path: ^/logout,               role: ROLE_NO_ACCESS }
    #
